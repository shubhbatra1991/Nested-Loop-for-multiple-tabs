{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/arvind/demo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '.App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formValues, setFormValues] = useState([{\n    name: \"\",\n    email: \"\"\n  }]);\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      name: \"\",\n      email: \"\"\n    }]);\n  };\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: element.name || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: element.email || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button remove\",\n        onClick: () => removeFormFields(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button add\",\n        type: \"button\",\n        onClick: () => addFormFields(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button submit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"5K260C4pF2V8TUjqJvT0id/QpkI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","formValues","setFormValues","name","email","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","element","index"],"sources":["/home/saurabh/Desktop/arvind/demo/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '.App.css'\n\nconst App = () => {\n\n    const [formValues, setFormValues] = useState([{ name: \"\", email : \"\"}])\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { name: \"\", email: \"\" }])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n\n    return (\n        <form  onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n              <label>Name</label>\n              <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n              <label>Email</label>\n              <input type=\"text\" name=\"email\" value={element.email || \"\"} onChange={e => handleChange(index, e)} />\n              {\n                index ? \n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n                : null\n              }\n            </div>\n          ))}\n          <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n      </form>\n    )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,UAAU;AAAA;AAEjB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAAEI,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAG;EAAE,CAAC,CAAC,CAAC;EAEvE,IAAIC,YAAY,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzB,IAAIC,aAAa,GAAG,CAAC,GAAGP,UAAU,CAAC;IACnCO,aAAa,CAACF,CAAC,CAAC,CAACC,CAAC,CAACE,MAAM,CAACN,IAAI,CAAC,GAAGI,CAAC,CAACE,MAAM,CAACC,KAAK;IAChDR,aAAa,CAACM,aAAa,CAAC;EAC9B,CAAC;EAEH,IAAIG,aAAa,GAAG,MAAM;IACtBT,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE;MAAEE,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EACzD,CAAC;EAEH,IAAIQ,gBAAgB,GAAIN,CAAC,IAAK;IAC1B,IAAIE,aAAa,GAAG,CAAC,GAAGP,UAAU,CAAC;IACnCO,aAAa,CAACK,MAAM,CAACP,CAAC,EAAE,CAAC,CAAC;IAC1BJ,aAAa,CAACM,aAAa,CAAC;EAChC,CAAC;EAED,IAAIM,YAAY,GAAIC,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,EAAE;IACtBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAClB,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,oBACI;IAAO,QAAQ,EAAEa,YAAa;IAAA,WAC3Bb,UAAU,CAACmB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7B;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAED,OAAO,CAAClB,IAAI,IAAI,EAAG;QAAC,QAAQ,EAAEI,CAAC,IAAIF,YAAY,CAACiB,KAAK,EAAEf,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACnG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,OAAO;QAAC,KAAK,EAAEc,OAAO,CAACjB,KAAK,IAAI,EAAG;QAAC,QAAQ,EAAEG,CAAC,IAAIF,YAAY,CAACiB,KAAK,EAAEf,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,EAEnGe,KAAK,gBACH;QAAQ,IAAI,EAAC,QAAQ;QAAE,SAAS,EAAC,eAAe;QAAC,OAAO,EAAE,MAAMV,gBAAgB,CAACU,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,GACxG,IAAI;IAAA,GARwBA,KAAK;MAAA;MAAA;MAAA;IAAA,QAWxC,CAAC,eACF;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAQ,SAAS,EAAC,YAAY;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAMX,aAAa,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACzF;QAAQ,SAAS,EAAC,eAAe;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7D;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEb,CAAC;AAAA,GA9CKX,GAAG;AAAA,KAAHA,GAAG;AAgDT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}