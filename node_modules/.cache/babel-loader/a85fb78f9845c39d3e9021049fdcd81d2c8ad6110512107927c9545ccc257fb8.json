{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/arvind/demo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formValues, setFormValues] = useState([{\n    name: \"\"\n  }]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      name: \"\"\n    }]);\n  };\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Launch demo modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: this.setGender.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"MALE\",\n            name: \"gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \" Male\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"FEMALE\",\n            name: \"gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), \" Female\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: element.name || \"\",\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button remove\",\n          onClick: () => removeFormFields(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button add\",\n          type: \"button\",\n          onClick: () => addFormFields(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button submit\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"VfnLO3dMCf3FxCj8xmTwmMG8vMo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Modal","App","formValues","setFormValues","name","show","setShow","handleClose","handleShow","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","setGender","bind","map","element","index"],"sources":["/home/saurabh/Desktop/arvind/demo/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst App = () => {\n\n    const [formValues, setFormValues] = useState([{ name: \"\"}])\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { name: \"\" }])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Launch demo modal\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          \n          <div onChange={this.setGender.bind(this)}>\n            <input type=\"radio\" value=\"MALE\" name=\"gender\"/> Male\n            <input type=\"radio\" value=\"FEMALE\" name=\"gender\"/> Female\n          </div>\n              </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <form  onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n              <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n              {\n                index ? \n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n                : null\n              }\n            </div>\n          ))}\n          <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </>\n    )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC;AAAA;AAE1C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CAAC;IAAEM,IAAI,EAAE;EAAE,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMS,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAI,CAAC;EAEtC,IAAIG,YAAY,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzB,IAAIC,aAAa,GAAG,CAAC,GAAGV,UAAU,CAAC;IACnCU,aAAa,CAACF,CAAC,CAAC,CAACC,CAAC,CAACE,MAAM,CAACT,IAAI,CAAC,GAAGO,CAAC,CAACE,MAAM,CAACC,KAAK;IAChDX,aAAa,CAACS,aAAa,CAAC;EAC9B,CAAC;EAEH,IAAIG,aAAa,GAAG,MAAM;IACtBZ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE;MAAEE,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC;EAEH,IAAIY,gBAAgB,GAAIN,CAAC,IAAK;IAC1B,IAAIE,aAAa,GAAG,CAAC,GAAGV,UAAU,CAAC;IACnCU,aAAa,CAACK,MAAM,CAACP,CAAC,EAAE,CAAC,CAAC;IAC1BP,aAAa,CAACS,aAAa,CAAC;EAChC,CAAC;EAED,IAAIM,YAAY,GAAIC,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,EAAE;IACtBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACrB,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,OAAO,EAAC,SAAS;MAAC,OAAO,EAAEM,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAErC,eAET,QAAC,KAAK;MAAC,IAAI,EAAEH,IAAK;MAAC,MAAM,EAAEE,WAAY;MAAA,wBACrC,QAAC,KAAK,CAAC,MAAM;QAAC,WAAW;QAAA,uBACvB,QAAC,KAAK,CAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA4B;QAAA;QAAA;QAAA;MAAA,QAC3B,eACf,QAAC,KAAK,CAAC,IAAI;QAAA,uBAEX;UAAK,QAAQ,EAAE,IAAI,CAACiB,SAAS,CAACC,IAAI,CAAC,IAAI,CAAE;UAAA,wBACvC;YAAO,IAAI,EAAC,OAAO;YAAC,KAAK,EAAC,MAAM;YAAC,IAAI,EAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAE,wBAChD;YAAO,IAAI,EAAC,OAAO;YAAC,KAAK,EAAC,QAAQ;YAAC,IAAI,EAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA;MAC9C;QAAA;QAAA;QAAA;MAAA,QACW,eACjB,QAAC,KAAK,CAAC,MAAM;QAAA,wBACX,QAAC,MAAM;UAAC,OAAO,EAAC,WAAW;UAAC,OAAO,EAAElB,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAExC,eACT,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,OAAO,EAAEA,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEtC;MAAA;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACT,eAER;MAAO,QAAQ,EAAEW,YAAa;MAAA,WAC3BhB,UAAU,CAACwB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7B;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAED,OAAO,CAACvB,IAAI,IAAI,EAAG;UAAC,QAAQ,EAAEO,CAAC,IAAIF,YAAY,CAACmB,KAAK,EAAEjB,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,EAEjGiB,KAAK,gBACH;UAAQ,IAAI,EAAC,QAAQ;UAAE,SAAS,EAAC,eAAe;UAAC,OAAO,EAAE,MAAMZ,gBAAgB,CAACY,KAAK,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,GACxG,IAAI;MAAA,GALwBA,KAAK;QAAA;QAAA;QAAA;MAAA,QAQxC,CAAC,eACF;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC3B;UAAQ,SAAS,EAAC,YAAY;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAE,MAAMb,aAAa,EAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACzF;UAAQ,SAAS,EAAC,eAAe;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7D;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA,gBACN;AAET,CAAC;AAAA,GA1EKd,GAAG;AAAA,KAAHA,GAAG;AA4ET,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}