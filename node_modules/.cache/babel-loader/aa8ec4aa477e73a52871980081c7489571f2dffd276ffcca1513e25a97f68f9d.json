{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/arvind/demo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formValues, setFormValues] = useState([{\n    name: \"\",\n    type: \"\",\n    subValues: [{\n      name: \"\"\n    }]\n  }]);\n  const [show, setShow] = useState(false);\n  const [fieldType, setFieldType] = useState('simple');\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n  let addFormFields = () => {\n    setShow(false);\n    setFormValues([...formValues, {\n      name: \"\",\n      type: fieldType,\n      subValues: [{\n        name: \"\"\n      }, {\n        name: \"\"\n      }]\n    }]);\n  };\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-sep\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"Network\",\n          children: \" Network \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShow,\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"simple\",\n              name: \"field\",\n              onChange: e => setFieldType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), \" Simple\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"complex\",\n              name: \"field\",\n              onChange: e => setFieldType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), \" Complex\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => addFormFields(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [formValues.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"access-structure\",\n            children: [element.type === 'simple' && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Assess Structure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), element.type === 'complex' && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: element.name || \"\",\n              onChange: e => handleChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: element.subValues.map((subElement, index) => {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  value: subElement.name || \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button remove\",\n              onClick: () => removeFormFields(index),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 110\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this) : null]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button add\",\n            type: \"button\",\n            onClick: () => addFormFields(),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCirclePlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"UJVaP+VoyOf3yiVZFdPMxYEByVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Modal","FontAwesomeIcon","faTrash","faCirclePlus","App","formValues","setFormValues","name","type","subValues","show","setShow","fieldType","setFieldType","handleClose","handleShow","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","element","index","subElement"],"sources":["/home/saurabh/Desktop/arvind/demo/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash,faCirclePlus } from '@fortawesome/free-solid-svg-icons'\n\n\nconst App = () => {\n\n    const [formValues, setFormValues] = useState([{ name: \"\", type: \"\", subValues: [{name: \"\"}]}])\n    const [show, setShow] = useState(false);\n    const [fieldType, setFieldType] = useState('simple')\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setShow(false);\n        setFormValues([...formValues, { name: \"\", type: fieldType, subValues: [ {name: \"\"}, {name: \"\"} ] }])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n   \n    return (\n      <>\n      <div className=\"line-sep\">\n      <div >\n        <Button variant=\"primary\" className='Network'> Network </Button>\n      </div>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Launch demo modal\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <div>\n            <input type=\"radio\" value=\"simple\" name=\"field\" onChange={e=> setFieldType(e.target.value) } /> Simple\n            <input type=\"radio\" value=\"complex\" name=\"field\" onChange={e=> setFieldType(e.target.value) }/> Complex\n          </div>\n              </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={() => addFormFields()}>\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <form  onSubmit={handleSubmit}>\n          {formValues.map((element, index) => {\n            return (\n              <div className=\"access-structure\" key={index}>\n                {element.type === 'simple' &&\n                  <h2>Assess Structure</h2>\n                }\n                {element.type === 'complex' &&\n                  <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={element.name || \"\"} \n                    onChange={e => handleChange(index, e)} \n                  />\n                }\n                <div>\n                {\n                  element.subValues.map((subElement, index) => {\n                    return (<input key={index} type=\"text\" name=\"name\" value={subElement.name || \"\"} />);\n                  })\n                }\n                </div>\n                \n                {\n                  index ? \n                    <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}><FontAwesomeIcon icon={faTrash} /></button> \n                  : null\n                }\n              </div>\n            );\n          })}\n          <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}><FontAwesomeIcon icon={faCirclePlus} /></button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n        </div>\n      </>\n    )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}