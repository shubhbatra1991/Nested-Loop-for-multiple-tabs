{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/arvind/demo/src/components/MyModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport MC from './multicomponent';\nimport Single from './Single';\nimport MyField from './MyField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyModal = () => {\n  _s();\n  const [formValues, setFormValues] = useState([]);\n  const [fieldType, setFieldType] = useState('simple');\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n  let addFormFields = () => {\n    setShow(false);\n    setFormValues([...formValues, {\n      name: \"\",\n      type: fieldType,\n      subValues: []\n    }]);\n  };\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bgpaper\",\n      children: [/*#__PURE__*/_jsxDEV(MyField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"Network\",\n          children: \" Network \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-sep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Choose your required selection:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"simple\",\n              name: \"field\",\n              onChange: e => setFieldType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), \" Simple\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"complex\",\n              name: \"field\",\n              onChange: e => setFieldType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), \" Complex\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => addFormFields(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: formValues.map((element, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"component\",\n                children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), element.type === 'simple' && /*#__PURE__*/_jsxDEV(Single, {\n                  type: \"text\",\n                  name: \"name\",\n                  value: element.name || \"\",\n                  removeFormFields: (index, e) => handleChange(index, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), element.type === 'complex' && /*#__PURE__*/_jsxDEV(MC, {\n                  type: \"text\",\n                  name: \"name\",\n                  value: element.name || \"\",\n                  removeFormFields: (index, e) => handleChange(index, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [element.subValues.map((subElement, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"name\",\n                      value: subElement.name || \"\"\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 35\n                    }, this);\n                  }), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"button ExtraButton\",\n                    onClick: () => removeFormFields(index),\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faTrash\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 119\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button add\",\n            type: \"button\",\n            handleShow: () => setShow(true),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCirclePlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 93\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MyModal, \"+xZrVf8zTFiOD6+dNEQTLI1nxAA=\");\n_c = MyModal;\nexport default MyModal;\nvar _c;\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"names":["React","Button","Modal","useState","FontAwesomeIcon","faTrash","faCirclePlus","MC","Single","MyField","MyModal","formValues","setFormValues","fieldType","setFieldType","show","setShow","handleClose","handleChange","i","e","newFormValues","target","name","value","addFormFields","type","subValues","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","element","index","subElement"],"sources":["/home/saurabh/Desktop/arvind/demo/src/components/MyModal.js"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash,faCirclePlus } from '@fortawesome/free-solid-svg-icons'\nimport MC from './multicomponent';\nimport Single from './Single'\nimport MyField  from './MyField'\n\nconst MyModal = () => {\n  \n\n    const [formValues, setFormValues] = useState([])\n    const [fieldType, setFieldType] = useState('simple')\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    // const handleShow = () => setShow(true);\n\n   \n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setShow(false);\n        setFormValues([...formValues, { name: \"\", type: fieldType, subValues: [ ] }])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n   \n    return (\n      <>\n      <div className=\"bgpaper\">\n        <MyField />\n        <div >\n          <Button variant=\"primary\" className='Network'> Network </Button>\n        </div>\n        <div className=\"line-sep\">\n      </div>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Choose your required selection:</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <div>\n            <input type=\"radio\" value=\"simple\" name=\"field\" onChange={e=> setFieldType(e.target.value) } /> Simple\n            <input type=\"radio\" value=\"complex\" name=\"field\" onChange={e=> setFieldType(e.target.value) }/> Complex\n          </div>\n              </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={() => addFormFields()}>\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <form  onSubmit={handleSubmit} className=\"timeline\">\n          <ul>\n            {formValues.map((element, index) => {\n              return (\n                <li>\n                    <div className=\"component\" key={index}>\n                      <hr />\n                      {element.type === 'simple' &&\n                        <Single \n                          type=\"text\" \n                          name=\"name\" \n                          value={element.name || \"\"} \n                          removeFormFields={(index, e) => handleChange(index,e)} \n                        />\n                      }\n                      \n                      {element.type === 'complex' &&\n                        <MC \n                          type=\"text\" \n                          name=\"name\" \n                          value={element.name || \"\"} \n                          removeFormFields={(index, e) => handleChange(index,e)} />\n                      }\n                      <div>\n                      {\n                        element.subValues.map((subElement, index) => {\n                          return (<input key={index} type=\"text\" name=\"name\" value={subElement.name || \"\"} />);\n                         \n                        })\n                      }\n                      {\n                        index ? \n                        <button type=\"button\"  className=\"button ExtraButton\" onClick={() => removeFormFields(index)}><FontAwesomeIcon icon={faTrash} /></button> \n                        : null\n                      }\n                      </div>\n                    </div>\n                  </li>\n              );\n            })}\n          </ul>\n          \n          <div>\n              <button className=\"button add\" type=\"button\" handleShow={() => setShow(true)}><FontAwesomeIcon icon={faCirclePlus} /></button>\n          </div> \n        </form>\n        </div>\n      </>\n    );\n}\n\nexport default MyModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}